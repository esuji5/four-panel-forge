// 統一されたプロンプト定義ファイル

// 共通のSystem Instruction
export const SYSTEM_INSTRUCTION = `あなたは4コマ漫画の画像を詳細に分析し、指定されたJSONスキーマに沿って構造化されたデータを生成するAIアシスタントです。各コマの内容、登場人物、そして追加情報（場面、場所、漫画的効果）を正確に抽出し、一貫性のあるデータを出力してください。
渡されるのは『ゆゆ式』の画像です。日本の4コマ漫画のため、右から左に読んでいきます。`;

// 共通のUser Instruction（キャラクター情報と分析方法）
export const COMMON_USER_INSTRUCTION = `タスク:
以下の4コマ漫画の画像を分析し、提示されたJSONスキーマに従って情報を抽出してください。各コマのセリフはOCRで抽出し、話者を推定してください。また、各コマの場面、場所、背景の漫画的効果についても記述してください。

## キャラクター認識のための情報:
メインの3人で特に出番が多い: 野々原ゆずこ、日向縁、櫟井唯
先生でメイン3人の次に出番が多い: 松本頼子
相川ら3人: 相川千穂、岡野佳、長谷川ふみ
その他登場人物とは分別できるとよいです。
人物の特徴がにている場合は、セリフの内容や前後の繋がりや関係性による口調などから判別してください。
characters_metaを以下に示します。
  "characters_meta": [
    {
      "character_id": "char_A",
      "name": "野々原ゆずこ",
      "description": "明るく元気な印象の少女。短い銀髪（または白髪）のボブカットで、毛先が少し外側に跳ねているのが特徴。常に笑顔で、目元はタレ目気味。好奇心旺盛で、よくボケをかます。",
      "role": "ボケ役",
      "speech_style": "自由奔放で突飛な発想を口にするムードメーカー。物事を独特の視点から捉えた質問を投げかけることが多い。",
      "representative_image_path": null
    },
    {
      "character_id": "char_B",
      "name": "日向縁",
      "description": "おっとりした優しい印象の少女。黒髪の長いストレートヘアが特徴で、前髪がある。表情は穏やかで、天然な発言をすることも多い。黒髪（または暗い茶髪）のおかっぱ風の髪型で、前髪はぱっつん。",
        "role": "天然・癒し役",
      "speech_style": "おっとりした口調。時々、意図せず面白いことを言う天然な発言をする。「おー」のような短い感嘆の相槌を打つこともある。",
      "representative_image_path": null
    },
    {
      "character_id": "char_C",
      "name": "櫟井唯",
      "description": "クールな印象の少女。金髪（または薄い茶髪）のショートヘアで、毛先が内側に軽く巻いている。主にツッコミ役で、困惑したり呆れたりする表情が多い。眉間にしわを寄せていることもある。",
      "role": "ツッコミ役",
      "speech_style": "主にゆずこや縁へのツッコミを担当。冷静な相槌や、呆れたような短い返事をすることが多い。「あーそうか」「そうな」のような納得や呆れの相槌もよく使う。",
      "representative_image_path": null
    },
    {
      "character_id": "char_D",
      "name": "松本頼子",
      "description": "メイン3人のクラス担任。茶髪のセミロングヘアで、目は閉じているか線で描かれており、表情が見えないのが特徴。基本的にスーツを着用していることが多いが、私服やジャージ姿も。生徒へのツッコミやボケもこなす。",
      "role": "先生・ツッコミ役",
      "speech_style": "先生として冷静に、しかし時には生徒たちの会話に乗っかる形でツッコミやボケを入れる。",
      "representative_image_path": null
    },
    {
      "character_id": "char_E",
      "name": "相川千穂",
      "description": "真面目な性格で、表情も比較的冷静。長い明るい髪（金髪または非常に明るい茶髪）、ストレートで前髪がある。",
      "role": "常識人・クラス委員長",
      "speech_style": "丁寧な口調。ゆずこたちの言動に困惑したり、常識的な反応をしたりすることが多い。",
      "representative_image_path": null
    },
    {
      "character_id": "char_F",
      "name": "岡野佳",
      "description": "黒髪のセミロングヘアで、毛先が少し外側に跳ねている。鋭い目つきとクールな表情が特徴。長めの黒髪で、毛先がややギザギザしている。",
        "role": "クール・ツッコミ役",
      "speech_style": "口数は少なめだが、的確なツッコミを入れる。千穂と共に行動することが多い。",
      "representative_image_path": null
    },
    {
      "character_id": "char_G",
      "name": "長谷川ふみ",
      "description": "黒髪のショートヘア。表情は穏やかで、知識や情報収集に長けている。 短い黒髪で、ややギザギザしたカット",
       "role": "情報通・解説役",
      "speech_style": "穏やかな口調。岡野佳らと行動していることが多い",
      "representative_image_path": null
    }
  ]

## キャラクター特定のための思考ステップ:
キャラクターを特定する際は、以下のステップで慎重に判断してください。
**ただし、事前のAI検出結果がプロンプト末尾にある場合は、よほど推測に自信がある場合を除いてそちらを優先してください。**
1.  **外見の観察**: まず、コマに描かれている各キャラクターの外見的特徴（特に髪型、髪色、服装）を詳細に観察します。
2.  **セリフの分析**: 次に、各セリフの内容を読み取り、その発言が「ボケ」「ツッコミ」「天然な発言」「冷静な相槌」など、どのような役割に基づいているかを分析します。
3.  **総合的な照合**: 最後に、ステップ1（外見）とステップ2（セリフの役割）の結果を、\`characters_meta\`に記載された\`description\`, \`role\`, \`speech_style\`と照らし合わせます。
4.  **優先順位**: **キャラクターの外見がデフォルメされていて判断が難しい場合は、セリフの内容とキャラクターの役割・口調の一致度を最優先して、最も矛盾のない人物を話者として特定してください。**

## セリフの話者特定手順（具体的計算法）:
**各セリフについて以下の計算と判定を行ってください：**

**ステップ1: 距離計算による第一候補の決定**
- 各吹き出しと全人物との距離を計算: sqrt((吹き出しX - 人物X)^2 + (吹き出しY - 人物Y)^2)
- 距離が0.2未満の人物を最有力候補とする
- 複数候補がいる場合は、右側（X座標が大きい）の人物を優先

**ステップ2: セリフ内容による補正（距離が近い候補が複数の場合）**
- 野々原ゆずこ（ボケ役）: 「わからないー！」「いとをかしー！」などの突飛な発言
- 日向縁（天然）: 「おー」「〜ですね」などの相槌
- 櫟井唯（ツッコミ役）: 「そうな」「あーそうか」などの呆れ口調

**ステップ3: 特殊ケースの処理**
- オフセリフ：最も遠い人物または画面外の人物
- 距離が0.4以上：基本的に話者ではない（オフセリフ除く）

## この画像について以下に答えてください。それぞれについて画像の右側にあるものから順に答えてください。
- ゆずこたちは、それぞれがコマのどこにいますか？誰もいない場合もあるし、3人より多い人数が写っている場合もあります
    - 画像の右側にあるものから順に答えてください。
    - 座標も答えてください
- どんな表情をしていますか?いない場合は「いない」
- 顔の向きを答えてください.いない場合は「いない」："正面"、"正面右"、"正面左"、"左向き"、"右向き"、"後ろ向き"、"上向き"、"下向き"
- どんなセリフを言っていますか？ない場合は「なし」
    - 画像の右側にあるものから順に答えてください。
    - 文が複数ある場合は半角スペースで区切ってください
- どんな服装をしていますか？：制服(冬服)、制服(夏服)、体操服(冬服)、体操服(夏服)、私服(どんな服装か記述)
  1. ショットタイプ（映り方）の指示

  - shotTypeで各キャラクターの映り方（ショットタイプ）を以下から選
  んで答えてください：
    - "全身ショット": 頭から足まで全身が映っている
    - "膝上ショット": 膝から上が映っている
    - "腰上ショット": 腰から上が映っている
    - "バストショット": 胸から上が映っている
    - "アップショット": 顔のアップ
    - "超アップショット": 顔の一部のアップ
    - "部分ショット": 手や足など体の一部のみ
    - "後ろ姿": 背中が映っている
    - "見切れ": 一部だけ映っている
 -  characterSizeで各キャラクターがコマ内で占める大きさを答えてください：
    - "特大": コマの80%以上を占める
    - "大": コマの50-80%を占める
    - "中": コマの30-50%を占める
    - "小": コマの10-30%を占める
    - "極小": コマの10%未満
- どんな場面だと思われますか？いない場合は「いない」
- 話している場所はどこですか？わからない場合は「不明」
- 背景に漫画ならではの効果描写があれば教えて下さい。ない場合は「なし」
- 画像の中には全部で何人いますか
- 画像の中には吹き出しがいくつありますか
- 座標に関しては(x,y)で画像に対する比率で答えてください

## 重要：characters配列の順序について
**characters配列は、コマ内で人物が右から出ている順番に並べてください。**
- 一番右にいる人物をcharacters[0]に
- その次に右にいる人物をcharacters[1]に
- 以下、左に向かって順番に配列に格納してください
- この順序は日本の漫画の読み順（右から左）と一致させるためです。

- 出力はJSON形式のみ`;

// 1コマ用JSONスキーマ
export const SINGLE_PANEL_JSON_SCHEMA = `
## 出力するjsonは以下の形式にしてください
{
    "charactersNum": 0,
    "serifsNum": 0,
    "serifs": [
        {
          "dialogueId": "d001_p001", // コマ内でのセリフのID
          "text": "OCRで抽出されたセリフの内容",
          "type": "speechBubble", // セリフの種類: "speechBubble" (吹き出し), "outsideBubble" (吹き出し外のセリフ/効果音), "narration" (ナレーション)
          "speakerCharacterId": "char_C", // このセリフを話しているキャラクターのID（推定）。不明な場合はnull。
          "boundingBox": null, // セリフテキストの画像内の座標。LLMの出力ではnullで構いません。
          "readingOrderIndex": 0, // コマ内でのセリフの読順（0から始まる、上から下、右から左の順）
          "coordinate": [0.1,0.1] // 座標を(x,y)で画像に対する比率で答えてください 
        }
        // ... 他のセリフも同様に
      ],
    "characters": [
        {
            "character": "",
            "faceDirection": "", 
            "position": "",
            "shotType": "",      
            "characterSize": "",
            "expression": "",
            "clothing": "",
            "isVisible": true
        }
       // ... 他の人物も同様に
    ],
    "sceneData": {
        "scene": "",
        "location": "",  //このコマの舞台となっている場所を記述してください。例: "教室", "廊下", "食堂", "自宅リビング"。場所が特定できない場合: 「不明」と記述してください。
        "backgroundEffects": "", // 背景やキャラクター周辺に描かれている、漫画ならではの視覚効果をリストアップしてください。例: "集中線", "流線", "汗の描写", "衝撃のエフェクト", "影の描写", "輝きのエフェクト", "擬音エフェクト"など。効果が何も見当たらない場合: 空のリスト [] としてください。
        "cameraAngle": "", // "アイレベル"、"俯瞰"、"あおり"、"斜め"
        "framing": "" // "中央"、"左寄り"、"右寄り"、"上寄り"、"下寄り"
    }
}

## 4コマ分のスキーマ
画像が4コマ分ある場合は、上記のスキーマを以下のスキーマで抱合してください
{
'panel1': {上記スキーマ},
'panel2': {上記スキーマ},
'panel3': {上記スキーマ},
'panel4': {上記スキーマ}
}
`;

// 4コマ用JSONスキーマ
export const FOUR_PANEL_JSON_SCHEMA = `
## 4コマ分のスキーマ
画像が4コマ分ある場合は、上記のスキーマを以下のスキーマで包合してください
{
  "panel1": {上記スキーマ},
  "panel2": {上記スキーマ},
  "panel3": {上記スキーマ},
  "panel4": {上記スキーマ}
}`;

// 統合されたプロンプト定義

// 1コマ用詳細プロンプト（人物特徴とロール付き）
export const PROMPT_SINGLE_WITH_ROLES = `${SYSTEM_INSTRUCTION}

${COMMON_USER_INSTRUCTION}

${SINGLE_PANEL_JSON_SCHEMA}`;

// 4コマ用詳細プロンプト
export const PROMPT_FOUR_PANEL = `${SYSTEM_INSTRUCTION}

${COMMON_USER_INSTRUCTION}

画像は4つのコマが縦に並んだ形で提供されます。上から1コマ目、2コマ目、3コマ目、4コマ目の順番です。
各コマについて個別に分析してください。

${FOUR_PANEL_JSON_SCHEMA}`;

// 結合済み4コマ用プロンプト（1コマ用と同じだが、4コマが結合された画像を処理）
export const PROMPT_COMBINED_KOMA = `${SYSTEM_INSTRUCTION}

${COMMON_USER_INSTRUCTION}

この画像は4コマ漫画が縦に結合された画像です。1コマ用のプロンプトを使って、結合された4コマ全体を1つの画像として分析してください。

**注意**: 結合済み画像の場合でも、characters配列は各コマ内で右から出ている順番に並べてください。

${SINGLE_PANEL_JSON_SCHEMA}`;

// App.tsx用の詳細4コマプロンプト（より詳細な指示付き）
export const FOUR_PANEL_PROMPT_DETAILED = `${SYSTEM_INSTRUCTION}

${COMMON_USER_INSTRUCTION}

画像は4つのコマが縦に並んだ形で提供されます。上から1コマ目、2コマ目、3コマ目、4コマ目の順番です。

**各コマごとに以下の項目を答えてください:**

1. **キャラクターの位置と詳細:**
   - ゆずこたちは、それぞれがコマのどこにいますか？
   - 画像の右側にあるものから順に答えてください
   - 座標も答えてください（各コマ内での相対座標、左から0.0-1.0、上から0.0-1.0）
   - 誰もいない場合もあるし、3人より多い人数が写っている場合もあります

2. **表情と顔の向き:**
   - どんな表情をしていますか？いない場合は「いない」
   - 顔の向きを答えてください。いない場合は「いない」

3. **セリフと吹き出し:**
   - どんなセリフを言っていますか？ない場合は「なし」
   - 画像の右側にあるものから順に答えてください
   - 座標も各コマに対する比率で答えてください
   - 文が複数ある場合は半角スペースで区切ってください
   - そのコマの中には吹き出しがいくつありますか

4. **服装と外観:**
   - どんな服装をしていますか？いない場合は「いない」

5. **シーン情報:**
   - どんな場面だと思われますか？
   - 話している場所はどこですか？わからない場合は「不明」
   - 背景に漫画ならではの効果描写があれば教えて下さい。ない場合は「なし」

6. **カウント情報:**
   - そのコマの中には全部で何人いますか

## 重要：characters配列の順序について
**各コマのcharacters配列は、コマ内で人物が右から出ている順番に並べてください。**
- 一番右にいる人物をcharacters[0]に
- その次に右にいる人物をcharacters[1]に
- 以下、左に向かって順番に配列に格納してください
- この順序は日本の漫画の読み順（右から左）と一致させるためです。

${FOUR_PANEL_JSON_SCHEMA}`;

// 旧版プロンプト（後方互換性のため保持）
export const PROMPT_SINGLE_BASIC = `「わからないことは知らないと答えて」
以下は『ゆゆ式』の画像です。日本の4コマ漫画のため、右から左に読んでいきます。主な登場人物は以下です。

- 日向縁
	- "縁の髪の特徴": [  "黒っぽい髪色",  "長め（肩くらいの長さ）",  "ストレートな髪質",  "前髪がある"  ]
- 櫟井唯 
	- "唯の髪の特徴": [  "白っぽい髪色",  "短め（首あたりの長さ）",  "ややウェーブがかかっているように見える",  "前髪がある",  "髪の先端が少し外側に跳ねている"  ]
- 野々原ゆずこ 
	- "ゆずこの髪の特徴": [ "短め",  "ボブカットのようなスタイル",  "前髪がやや長め",  "髪の先端が内側に少し巻き込んでいる",  "髪色は白髪でも黒髪でもない中間的な色（おそらくグレーがかった色）"  ]

この画像について以下に答えてください。それぞれについて画像の右側にあるものから順に答えてください。
- ゆずこたちは、それぞれがコマのどこにいますか？誰もいない場合もあるし、3人より多い人数が写っている場合もあります
	- 画像の右側にあるものから順に答えてください。
	- 座標も答えてください
- どんな表情をしていますか?いない場合は「いない」
- 顔の向きを答えてください.いない場合は「いない」
- どんなセリフを言っていますか？ない場合は「なし」
	- 画像の右側にあるものから順に答えてください。
	- 座標も画像に対する比率で答えてください 
	- 文が複数ある場合は半角スペースで区切ってください
- どんな服装をしていますか？いない場合は「いない」
- どんな場面だと思われますか？いない場合は「いない」
- 話している場所はどこですか？わからない場合は「不明」
- 背景に漫画ならではの効果描写があれば教えて下さい。ない場合は「なし」
- 画像の中には全部で何人いますか
- 画像の中には吹き出しがいくつありますか
- 出力はJSON形式のみ

出力するjsonは以下の形式にしてください
{
    "charactersNum": 0,
    "serifsNum": 0,
    "characters": [
        {
            "character": "",
            "faceDirection": "",
            "position": "",
            "expression": "",
            "clothing": "",
            "isVisible": true
        },
        {
            "character": "",
            "faceDirection": "",
            "position": "",
            "expression": "",
            "clothing": "",
            "isVisible": true
        },
        {
            "character": "",
            "faceDirection": "",
            "position": "",
            "expression": "",
            "clothing": "",
            "isVisible": true
        }
    ],
    "sceneData": {
        "scene": "",
        "location": "",
        "backgroundEffects": ""
    }
}`;

// 改善版プロンプト（AI検出結果活用版）

// より簡潔で構造化されたSystem Instruction
export const IMPROVED_SYSTEM_INSTRUCTION = `あなたは4コマ漫画『ゆゆ式』の画像を分析するAIアシスタントです。
事前のAI検出結果を活用し、指定されたJSONスキーマに沿って高精度な情報抽出を行ってください。
日本の4コマ漫画は右から左に読みます。`;

// AI検出結果を活用した改善版User Instruction
export const IMPROVED_USER_INSTRUCTION = `タスク:
提供された4コマ漫画画像とAI検出結果を基に、詳細な情報を抽出してください。

## AI検出結果の活用方法:
プロンプト末尾に以下の形式でAI検出結果が提供されます：
- detected_characters: 各コマで検出された人物のリスト（座標、信頼度付き）
- detected_bubbles: 各コマで検出された吹き出しのリスト（座標、タイプ、サイズ、推定話者付き）
  - typeには吹き出しの種類が含まれます（speech_bubble、thought_bubble、chractor_bubble_yuzuko等）
  - sizeには吹き出しのサイズが「幅, 高さ」形式（正規化された値 0.0〜1.0）で含まれます

**重要**: AI検出結果を基準とし、明らかな誤りがある場合のみ修正してください。

## キャラクター特定の優先順位:
1. AI検出結果の detected_charactersを最優先
2. セリフ内容と役割の一致度による補正
3. 文脈と前後関係による最終判断

## 話者特定の具体的計算手順:

**重要: 以下の優先順位で話者を判定してください**

### 優先度1: キャラクター専用吹き出しタイプ（最優先）
detected_bubblesのtypeが以下の場合は、対応するキャラクターを話者とする：
- \`chractor_bubble_yuzuko\` → 野々原ゆずこ（char_A）
- \`chractor_bubble_yukari\` → 日向縁（char_B）  
- \`chractor_bubble_yui\` → 櫟井唯（char_C）
- その他のchractor_bubble_xxx → 対応するキャラクター

### 優先度2: 距離計算による判定（通常の吹き出しの場合）
1. **各吹き出しについて、全ての人物との距離を計算**
   - 距離 = sqrt((吹き出しX - 人物X)^2 + (吹き出しY - 人物Y)^2)
   - 例: 吹き出し[0.7, 0.3]と人物[0.8, 0.4]の距離 = sqrt((0.7-0.8)^2 + (0.3-0.4)^2) = 0.141

2. **距離による話者判定ルール**
   - 距離が0.2未満: その人物が話者である可能性が非常に高い
   - 距離が0.2-0.4: 話者の候補として考慮
   - 距離が0.4以上: 基本的に話者ではない（オフセリフを除く）

3. **同距離の場合の優先順位**
   - 右側の人物を優先（日本漫画の読み順）
   - Y座標が近い人物を優先（同じ高さにいる人物）

### 優先度3: セリフ内容による補正
距離が近い候補が複数いる場合のみ適用：
- 「わからないー！」「いとをかしー！」→ 野々原ゆずこの可能性大
- 「そうな」「あーそうか」→ 櫟井唯の可能性大
- 「おー」「〜ですね」→ 日向縁の可能性大

### 優先度4: 特殊ケースの処理
- **オフセリフ（offserif）**: 最も遠い人物、または画面外の人物
- **思考吹き出し（thought_bubble）**: 表情や視線から判断
- **叫び吹き出し（exclamation_bubble）**: 驚いた表情の人物を優先

### 話者判定の出力例:
\`\`\`
吹き出し1 [0.7, 0.3] (speech_bubble):
- 野々原ゆずこ [0.8, 0.4]: 距離0.141 → 最も近い、話者と判定
- 日向縁 [0.2, 0.3]: 距離0.500 → 遠い
- 櫟井唯 [0.5, 0.7]: 距離0.447 → 遠い

吹き出し2 [0.3, 0.6] (chractor_bubble_yui):
- タイプから櫟井唯と確定（距離計算不要）
\`\`\`

## 分析項目（簡潔版）:
各コマについて以下を抽出してください：

### キャラクター情報:
- AI検出された人物の確認と修正（必要な場合のみ）
- 表情の詳細（AI検出では不可能な部分）
- 服装の詳細（制服種別、私服の説明など）
- ショットタイプとキャラクターサイズ

### セリフ情報:
- AI検出された吹き出しと話者の確認
- セリフ内容のOCR結果
- 上記の段階的手順による話者推定

### シーン情報:
- 場所の特定（教室、廊下、屋外など）
- 背景効果（集中線、流線、汗マークなど）
- カメラアングルとフレーミング

## characters_meta（参照用・簡潔版）:
※AI検出で判別困難な場合のみ参照
- char_A: 野々原ゆずこ - 銀髪ボブ、ボケ役
- char_B: 日向縁 - 黒髪ストレート、天然
- char_C: 櫟井唯 - 金髪ショート、ツッコミ役
- char_D: 松本頼子 - 茶髪、先生
- char_E: 相川千穂 - 金髪ロング、委員長
- char_F: 岡野佳 - 黒髪セミロング、クール
- char_G: 長谷川ふみ - 黒髪ショート、情報通`;

// 改善版JSONスキーマ
export const IMPROVED_JSON_SCHEMA = `
## 出力JSON形式:
{
    "charactersNum": 0,  // AI検出結果から
    "serifsNum": 0,      // AI検出結果から
    "detectionConfidence": {  // AI検出の信頼度
        "characters": 0.95,
        "bubbles": 0.88
    },
    "serifs": [
        {
            "dialogueId": "d001_p001",
            "text": "OCRで抽出されたセリフ",
            "type": "speechBubble",
            "speakerCharacterId": "char_A",  // AI検出結果を優先
            "detectedSpeakerId": "char_A",    // AI検出の結果
            "speakerConfidence": 0.85,        // 話者推定の信頼度
            "coordinate": [0.1, 0.1],         // AI検出座標
            "readingOrderIndex": 0
        }
    ],
    "characters": [
        {
            "characterId": "char_A",          // AI検出結果
            "detectionConfidence": 0.92,     // 人物検出の信頼度
            "identityConfidence": 0.88,      // 身元識別の信頼度
            "position": [0.3, 0.5],          // AI検出座標
            "faceDirection": "正面",
            "shotType": "バストショット",
            "characterSize": "中",
            "expression": "笑顔",            // LLMによる詳細分析
            "clothing": "制服(冬服)",
            "isVisible": true
        }
    ],
    "sceneData": {
        "scene": "教室での会話",
        "location": "教室",
        "backgroundEffects": ["集中線"],
        "cameraAngle": "アイレベル",
        "framing": "中央"
    }
}`;

// 改善版1コマ用プロンプト
export const IMPROVED_PROMPT_SINGLE = `${IMPROVED_SYSTEM_INSTRUCTION}

${IMPROVED_USER_INSTRUCTION}

${IMPROVED_JSON_SCHEMA}`;

// 改善版4コマ用プロンプト
export const IMPROVED_PROMPT_FOUR_PANEL = `${IMPROVED_SYSTEM_INSTRUCTION}

${IMPROVED_USER_INSTRUCTION}

画像は4つのコマが縦に並んだ形で提供されます。上から1コマ目、2コマ目、3コマ目、4コマ目の順番です。
各コマについて個別に分析してください。

## 4コマ分のスキーマ
{
  "panel1": ${IMPROVED_JSON_SCHEMA},
  "panel2": { /* panel1と同じ形式 */ },
  "panel3": { /* panel1と同じ形式 */ },
  "panel4": { /* panel1と同じ形式 */ }
}`;

// デフォルトプロンプトのエクスポート
export const DEFAULT_PROMPT_SINGLE = PROMPT_SINGLE_WITH_ROLES;
export const DEFAULT_PROMPT_FOUR_PANEL =
  PROMPT_FOUR_PANEL + FOUR_PANEL_JSON_SCHEMA;
export const DEFAULT_PROMPT_COMBINED = PROMPT_COMBINED_KOMA;
